/* -------------------------------------------------------------------------- */
/*                              mixins                                        */
/* -------------------------------------------------------------------------- */

@mixin list-unstyled {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin scrollbars(
  $size,
  $border-size,
  $border-radius,
  $bg-scroll-color,
  $foreground-color,
  $background-color
) {
  // For Google Chrome
  &::-webkit-scrollbar {
    width: $size;
    background-color: $bg-scroll-color;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-track {
    border-radius: $border-radius;
    background: $foreground-color;
    border: $border-size solid transparent;
    background-clip: content-box;
    margin: 0 0 5px;
  }
  &::-webkit-scrollbar-thumb {
    border-radius: $border-radius;
    background: $background-color;
    border: $border-size solid transparent;
    background-clip: content-box;
  }
  // For Internet Explorer
  & {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

@mixin scrollbars2(
  $size,
  $border-radius,
  $foreground-color,
  $background-color
) {
  // For Google Chrome
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-thumb {
    background: $foreground-color;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-track {
    background: transparent;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-track-piece:end {
    background: $background-color;
    margin-right: 1rem;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-track-piece:start {
    background: $background-color;
    margin-left: 1rem;
    border-radius: $border-radius;
  }
  // For Internet Explorer
  & {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

@mixin img-aspect-ratio {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  height: 100%;
  width: 100%;
  object-fit: contain;
  object-position: center;
  margin: 0 auto;
}

@mixin multi-line-ellipsis-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin fix-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
}

@mixin hide-text {
  border: none !important;
  clip: rect(0, 0, 0, 0) !important;
  height: 0.01em !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 0.01em !important;
}
@mixin hover {
  &:hover,
  &:active {
    @content;
  }
}

@function fs($target) {
  @return math.div($target, 14px) * 1rem;
}

// breakpoints
$base_width: null;
// media queries
@mixin MQ($canvas) {
  @media only screen and (max-width: $canvas) {
    @content;
  }
}

@mixin MQ_min($canvas) {
  @media only screen and (min-width: $canvas) {
    @content;
  }
}

/*
      Misc
  */

@mixin align($vertical: true, $horizontal: false, $position: relative) {
  @if $position {
    position: $position;
  }
  @if $vertical {
    top: 50%;
  }
  @if $horizontal {
    left: 50%;
  }
  @if $vertical and $horizontal {
    transform: translateX(-50%) translateY(-50%);
  } @else if $vertical {
    transform: translateY(-50%);
  } @else {
    transform: translateX(-50%);
  }
}
// .results div{
//   @include delay(animation, 1, 8, 0.25s);
// }
@mixin delay($rule, $from, $to, $value) {
  @for $i from $from to ($to + 1) {
    &:nth-child(#{$i}) {
      #{$rule}-delay: (#{$i * $value});
    }
  }
}
//fonts
@mixin font-face(
  $name,
  $path,
  $weight: null,
  $style: null,
  $exts: woff2 woff ttf svg
) {
  $src: null;
  $extmods: (
    svg: "#" + str-replace($name, " ", "_"),
  );
  $formats: (
    ttf: "truetype",
  );
  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + "." + $extmod)) format(quote($format)),
      comma
    );
  }
  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
    font-display: fallback;
  }
}

@mixin button-bg($bg) {
  background: $bg;
  border: 1px solid $bg;
  color: $white;
  // &:hover {
  //   background-color: darken($bg, 5%);
  // }
}
@mixin button-outline($bg) {
  background: transparent;
  border: 1px solid $bg;
  color: $bg;
  // &:hover {
  //   background-color: $bg;
  //   color: $white;
  // }
}
@mixin button-link($color) {
  background: transparent;
  border: 0;
  padding: rem(2px);
  color: $color;
  font-weight: $weight-normal;
}
